name: Release Semantic Version
on:
  pull_request:
    types:
      - closed
    branches:
      - main

jobs:
  version:
    if: github.event.pull_request.merged == true
    runs-on: ubuntu-22.04
    permissions:
      contents: write
    steps:
    - uses: actions/checkout@v4
      with:
        ref: ${{ github.event.pull_request.merge_commit_sha }}
        fetch-depth: '0'

    - name: Remove latest tag if exists
      run: |
        if git tag | grep latest; then git push --delete origin latest; fi

    - name: Bump version and push tag
      id: bump-version
      uses: anothrNick/github-tag-action@v1 
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} 
        WITH_V: true
        DEFAULT_BUMP: patch

    - name: output tags
      run: |
        echo "TAG=${{ steps.bump-version.outputs.new_tag }}" >> $GITHUB_ENV
        echo "MAJOR=$(echo ${{ steps.bump-version.outputs.new_tag }} |
        cut -d'.' -f1)" >> $GITHUB_ENV
        echo "MINOR=$(echo ${{ steps.bump-version.outputs.new_tag }} |
        cut -d'.' -f1,2)" >> $GITHUB_ENV

    - name: Create release for the new tag
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      run: gh release create ${{ env.TAG }} --repo="$GITHUB_REPOSITORY" --title=${{ env.TAG }}  --generate-notes
  
    - name: Update major tag
      uses: EndBug/latest-tag@v1
      with:
        ref: ${{ env.MAJOR }}
        description: Major release tag

    - name: Update minor tag
      uses: EndBug/latest-tag@v1
      with:
        ref: ${{ env.MINOR }}
        description: Minor release tag

    - name: Update latest tag
      uses: EndBug/latest-tag@v1
      with:
        ref: latest
        description: Latest release tag
  